{"version":3,"sources":["TreeDisplay.js","SubcategoryIcon.js","ProductIcon.js","SelectorDisplay.js","RelatedDisplay.js","ChordDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["getTreeToNodeHelper","path","ind","rel","length","name","nodeName","nodeId","nodeSvgShape","shape","shapeProps","r","fill","children","getTreeToNode","node","nodes","getTreeToNodes","nodeId1","nodeId2","path1","path2","ptr1","ptr2","undefined","child1","child2","push","TreeDisplay","props","handleClick","nodeData","evt","setSelectedNode","data","this","relNodeId","selNodeId","transitionDuration","collapsible","textLayout","textAnchor","y","transform","translate","x","onClick","Component","SubcategoryIcon","xmlns","width","height","className","viewBox","fillRule","d","ProductIcon","BreadCrumbs","style","backgroundColor","selNode","map","prevNode","bgColor","textColor","border","padding","cursor","display","color","ChildrenCategories","flexGrow","overflow","sort","a","b","aName","toUpperCase","bName","childNodeId","childNode","flexDirection","alignItems","flex","textAlign","numChildren","paddingLeft","minWidth","prdCnt","SelectorDisplay","flexFlow","getDistanceBetweenNodes","branch","onSameBranch","onSameBranchCnt","leftCnt","leftChild","rightCnt","rightChild","RelatedDisplay","sortByCategory","aPathString","slice","pathNode","join","bPathString","sortByOverlap","aOverlap","also","bOverlap","revSortByOverlap","sortByPrdCnt","aPrdCnt","subPrdCnt","bPrdCnt","revSortByPrdCnt","sortByDistance","aDist","id","bDist","revSortByDistance","revSortByCategory","setSortFunction","keyword","console","log","state","setState","sortFunction","split","reverse","bind","alsoEntries","Object","keys","paddingRight","alsoNodeId","alsoNode","pathString","relNode","setRelatedNode","fontSize","Math","round","getMatrixNodes","sel","alsoIntersection","selAlsoIds","relAlsoIds","filter","item","includes","values","getAlsoIntersection","concat","createMatrix","matrixNodes","matrix","forEach","outerInd","innerInd","colors","fontColors","ChordDisplay","myMatrixNodes","myMatrix","myColors","myFontColors","myLabels","row","reduce","acc","cur","justifyContent","alignItem","fontWeight","componentId","resizeWithWindow","groupLabels","groupColors","groupOnClick","marginTop","margin","App","userSelect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3337149.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport Tree from 'react-d3-tree';\r\nimport nodes from './data/data.json'\r\n\r\nconst getTreeToNodeHelper = (path, ind=0, rel=false) => {\r\n\tif (ind === path.length - 1) {\r\n\t\treturn {\r\n\t\t\tname: path[ind].nodeName,\r\n\t\t\tnodeId: path[ind].nodeId,\r\n\t\t\tnodeSvgShape: {\r\n\t\t\t\tshape: 'circle',\r\n\t\t\t\tshapeProps: {\r\n\t\t\t\t\tr: 10,\r\n\t\t\t\t\tfill: rel ? 'blue' : 'red'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tname: path[ind].nodeName,\r\n\t\t\tnodeId: path[ind].nodeId,\r\n\t\t\tchildren: [getTreeToNodeHelper(path, ind+1, rel)]\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst getTreeToNode = (nodeId, rel=false) => {\r\n\tconst node = nodes[nodeId];\r\n\treturn getTreeToNodeHelper(node.path, 0, rel);\r\n}\r\n\r\nconst getTreeToNodes = (nodeId1, nodeId2) => {\r\n\tconst path1 = getTreeToNode(nodeId1);\r\n\r\n\tif (nodeId1 === nodeId2) {\r\n\t\treturn path1;\r\n\t}\r\n\r\n\tconst path2 = getTreeToNode(nodeId2, true);\r\n\r\n\tlet ptr1 = path1;\r\n\tlet ptr2 = path2;\r\n\r\n\t// path1 is root\r\n\tif (ptr1.children === undefined) {\r\n\t\tptr1.children = ptr2.children;\r\n\t\treturn [path1];\r\n\t}\r\n\r\n\t// path2 is root\r\n\tif (ptr2.children === undefined) {\r\n\t\tptr2.children = ptr1.children;\r\n\t\treturn [path2];\r\n\t}\r\n\r\n\tlet child1 = path1.children[0];\r\n\tlet child2 = path2.children[0];\r\n\r\n\twhile(child1[\"name\"] === child2[\"name\"]) {\r\n\t\tptr1 = ptr1.children[0];\r\n\t\tptr2 = ptr2.children[0];\r\n\r\n\t\tif (ptr2.children === undefined) {\r\n\t\t\tchild1 = ptr1.children[0];\r\n\t\t\tptr2.children = [child1];\r\n\t\t\treturn [path2];\r\n\t\t}\r\n\r\n\t\tif (ptr1.children === undefined) {\r\n\t\t\tchild2 = ptr2.children[0];\r\n\t\t\tptr1.children = [child2];\r\n\t\t\treturn [path1]\r\n\t\t}\r\n\r\n\t\tchild1 = ptr1.children[0];\r\n\t\tchild2 = ptr2.children[0];\r\n\t}\r\n\r\n\tptr1.children.push(child2);\r\n\t\r\n\treturn [path1];\r\n}\r\n\r\nclass TreeDisplay extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\thandleClick = (nodeData, evt) => {\r\n\t\tthis.props.setSelectedNode(nodeData.nodeId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Tree\r\n\t\t\t\tdata={\r\n\t\t\t\t\tthis.props.relNodeId === undefined \r\n\t\t\t\t\t? getTreeToNode(this.props.selNodeId)\r\n\t\t\t\t\t: getTreeToNodes(this.props.selNodeId, this.props.relNodeId)\r\n\t\t\t\t}\r\n\t\t\t\ttransitionDuration={0}\r\n\t\t\t\tcollapsible={false}\r\n\t\t\t\ttextLayout={{textAnchor: \"middle\", y: 30, transform: \"scale(0.7, 1)\"}}\r\n\t\t\t\ttranslate={{x: 30, y: 190}}\r\n\t\t\t\tonClick={this.handleClick}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TreeDisplay;\r\nexport { getTreeToNodes };","function SubcategoryIcon() {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-diagram-2\" viewBox=\"0 0 16 16\">\r\n\t\t\t<path fillRule=\"evenodd\" d=\"M6 3.5A1.5 1.5 0 0 1 7.5 2h1A1.5 1.5 0 0 1 10 3.5v1A1.5 1.5 0 0 1 8.5 6v1H11a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 5 7h2.5V6A1.5 1.5 0 0 1 6 4.5v-1zM8.5 5a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1zM3 11.5A1.5 1.5 0 0 1 4.5 10h1A1.5 1.5 0 0 1 7 11.5v1A1.5 1.5 0 0 1 5.5 14h-1A1.5 1.5 0 0 1 3 12.5v-1zm1.5-.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1zm4.5.5a1.5 1.5 0 0 1 1.5-1.5h1a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5h-1A1.5 1.5 0 0 1 9 12.5v-1zm1.5-.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1z\"/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default SubcategoryIcon;","function ProductIcon() {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bag\" viewBox=\"0 0 16 16\">\r\n\t\t\t<path fillRule=\"evenodd\" d=\"M8 1a2.5 2.5 0 0 0-2.5 2.5V4h5v-.5A2.5 2.5 0 0 0 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V5H2z\"/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default ProductIcon;","import { Component } from 'react';\r\nimport SubcategoryIcon from './SubcategoryIcon';\r\nimport ProductIcon from './ProductIcon';\r\n\r\nimport nodes from './data/data.json';\r\n\r\nclass BreadCrumbs extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{backgroundColor: \"gray\"}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.selNode.path.map((prevNode, ind) => {\r\n\t\t\t\t\t\tconst bgColor = ind === this.props.selNode.path.length - 1 ? \"black\": \"white\";\r\n\t\t\t\t\t\tconst textColor = ind === this.props.selNode.path.length - 1 ? \"white\" : \"black\";\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: \"1px solid black\", \r\n\t\t\t\t\t\t\t\t\tpadding: \"5px\", \r\n\t\t\t\t\t\t\t\t\tcursor: \"pointer\", \r\n\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: bgColor,\r\n\t\t\t\t\t\t\t\t\tcolor: textColor\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkey={prevNode.nodeId}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.setSelectedNode(prevNode.nodeId);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{prevNode.nodeName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass ChildrenCategories extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{flexGrow: 1, overflow: \"auto\", backgroundColor: \"gray\"}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.selNode.children.sort((a, b) => {\r\n\t\t\t\t\t\tconst aName = nodes[a].name.toUpperCase();\r\n\t\t\t\t\t\tconst bName = nodes[b].name.toUpperCase();\r\n\t\t\t\t\t\tif (aName < bName) {\r\n\t\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (aName > bName) {\r\n\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}).map(childNodeId => {\r\n\t\t\t\t\t\tconst childNode = nodes[childNodeId];\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\tstyle={{border: \"1px solid black\", padding: \"5px\", display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\", cursor: \"pointer\", backgroundColor: \"white\"}}\r\n\t\t\t\t\t\t\t\tkey={childNodeId}\r\n\t\t\t\t\t\t\t\tonClick={() => {this.props.setSelectedNode(childNodeId)}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span style={{flex: 1}}>\r\n\t\t\t\t\t\t\t\t\t{ childNode.name }\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span style={{flex: 1, textAlign: \"right\"}}>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{ childNode.numChildren } \r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<SubcategoryIcon /> \r\n\t\t\t\t\t\t\t\t\t<span style={{paddingLeft: \"10px\"}}/>\r\n\t\t\t\t\t\t\t\t\t<span style={{minWidth: \"30px\", display: \"inline-block\"}}>\r\n\t\t\t\t\t\t\t\t\t{ childNode.prdCnt }\r\n\t\t\t\t\t\t\t\t\t</span> \r\n\t\t\t\t\t\t\t\t\t<ProductIcon />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass SelectorDisplay extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{display: \"flex\", flexFlow: \"column\", height: \"100%\"}}>\r\n\t\t\t\t<BreadCrumbs\r\n\t\t\t\t\tselNode={this.props.selNode}\r\n\t\t\t\t\tsetSelectedNode={this.props.setSelectedNode}\r\n\t\t\t\t/>\r\n\t\t\t\t<ChildrenCategories\r\n\t\t\t\t\tselNode={this.props.selNode}\r\n\t\t\t\t\tsetSelectedNode={this.props.setSelectedNode}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SelectorDisplay;","import { Component } from 'react';\r\nimport { getTreeToNodes } from './TreeDisplay';\r\n\r\nimport nodes from './data/data.json';\r\n\r\nconst getDistanceBetweenNodes = (nodeId1, nodeId2) => {\r\n\tif (nodeId1 === nodeId2) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tconst tree = getTreeToNodes(nodeId1, nodeId2);\r\n\r\n\tlet branch = tree[0];\r\n\t\r\n\t// tree is just the root\r\n\tif (branch.name === \"root\" && branch.children === undefined) {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tlet onSameBranch = false;\r\n\tlet onSameBranchCnt = 1;\r\n\r\n\t// iterate until there is more than one child; this is the branching point\r\n\twhile (branch.children !== undefined && branch.children.length < 2) {\r\n\t\tif (onSameBranch) {\r\n\t\t\tonSameBranchCnt += 1;\r\n\t\t}\r\n\t\tif (branch.nodeId === nodeId1 || branch.nodeId === nodeId2) {\r\n\t\t\tonSameBranch = true;\r\n\t\t}\r\n\t\tbranch = branch.children[0];\r\n\t}\r\n\r\n\tif (onSameBranch) {\r\n\t\treturn onSameBranchCnt;\r\n\t}\r\n\r\n\t// count left children until there are no more\r\n\tlet leftCnt = 1;\r\n\tlet leftChild = branch.children[0];\r\n\r\n\twhile (leftChild.children !== undefined) {\r\n\t\tleftCnt += 1;\r\n\t\tleftChild = leftChild.children[0];\r\n\t}\r\n\r\n\t// count right children until there are no more\r\n\tlet rightCnt = 1;\r\n\tlet rightChild = branch.children[1];\r\n\r\n\twhile (rightChild.children !== undefined) {\r\n\t\trightCnt += 1;\r\n\t\trightChild = rightChild.children[0];\r\n\t}\r\n\r\n\treturn(leftCnt + rightCnt);\r\n}\r\n\r\nclass RelatedDisplay extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsortFunction: this.sortByCategory,\r\n\t\t\tkeyword: \"category\"\r\n\t\t}\r\n\r\n\t\tthis.setSortFunction = this.setSortFunction.bind(this);\r\n\t}\r\n\r\n\tsortByCategory = (a, b) => {\r\n\t\tconst aName = nodes[a].name.toUpperCase();\r\n\t\tconst bName = nodes[b].name.toUpperCase();\r\n\t\tif (aName < bName) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (aName > bName) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t// if we reach here, they are equal and we should break ties with\r\n\t\t// the path\r\n\t\tconst aPathString = nodes[a].path.slice(1, nodes[a].path.length - 1)\r\n\t\t\t.map(pathNode => pathNode.nodeName)\r\n\t\t\t.join(\" > \") + \" >\";\r\n\t\tconst bPathString = nodes[b].path.slice(1, nodes[b].path.length - 1)\r\n\t\t\t.map(pathNode => pathNode.nodeName)\r\n\t\t\t.join(\" > \") + \" >\";\r\n\t\tif (aPathString < bPathString) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (aPathString > bPathString) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t// truly the same\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tsortByOverlap = (a, b) => {\r\n\t\tconst aOverlap = this.props.selNode.also[a];\r\n\t\tconst bOverlap = this.props.selNode.also[b];\r\n\r\n\t\tif (aOverlap < bOverlap) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (aOverlap > bOverlap) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\trevSortByOverlap = (a, b) => {\r\n\t\treturn -1 * (this.sortByOverlap(a, b));\r\n\t}\r\n\r\n\tsortByPrdCnt = (a, b) => {\r\n\t\tconst aPrdCnt = nodes[a].subPrdCnt;\r\n\t\tconst bPrdCnt = nodes[b].subPrdCnt;\r\n\r\n\t\tif (aPrdCnt < bPrdCnt) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (aPrdCnt > bPrdCnt) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\trevSortByPrdCnt = (a, b) => {\r\n\t\treturn -1 * this.sortByPrdCnt(a, b);\r\n\t}\r\n\r\n\tsortByDistance = (a, b) => {\r\n\t\tconst aDist = getDistanceBetweenNodes(this.props.selNode.id, a);\r\n\t\tconst bDist = getDistanceBetweenNodes(this.props.selNode.id, b);\r\n\r\n\t\tif (aDist < bDist) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (aDist > bDist) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\trevSortByDistance = (a, b) => {\r\n\t\treturn -1 * this.sortByDistance(a, b);\r\n\t}\r\n\r\n\trevSortByCategory = (a, b) => {\r\n\t\treturn -1 * this.sortByCategory(a, b);\r\n\t}\r\n\r\n\tsetSortFunction = (keyword) => {\r\n\t\tconsole.log(\"keyword\");\r\n\t\tconst curKeyword = this.state.keyword;\r\n\t\t// we're going in reverse order\r\n\t\tif (curKeyword === keyword) {\r\n\t\t\tif (keyword === \"category\") {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortFunction: this.revSortByCategory,\r\n\t\t\t\t\tkeyword: keyword.split(\"\").reverse().join(\"\")\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (keyword === \"overlap\") {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortFunction: this.revSortByOverlap,\r\n\t\t\t\t\tkeyword: keyword.split(\"\").reverse().join(\"\")\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (keyword === \"prdcnt\") {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortFunction: this.revSortByPrdCnt,\r\n\t\t\t\t\tkeyword: keyword.split(\"\").reverse().join(\"\")\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (keyword === \"distance\") {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortFunction: this.revSortByDistance,\r\n\t\t\t\t\tkeyword: keyword.split(\"\").reverse().join(\"\")\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (keyword === \"category\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsortFunction: this.sortByCategory,\r\n\t\t\t\tkeyword: keyword\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (keyword === \"overlap\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsortFunction: this.sortByOverlap,\r\n\t\t\t\tkeyword: keyword\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (keyword === \"prdcnt\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsortFunction: this.sortByPrdCnt,\r\n\t\t\t\tkeyword: keyword\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (keyword === \"distance\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsortFunction: this.sortByDistance,\r\n\t\t\t\tkeyword: keyword\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst alsoEntries = Object.keys(this.props.selNode.also).sort(this.state.sortFunction);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<div style={{display: \"flex\", flexFlow: \"column\", height: \"100%\"}}>\r\n\t\t\t\t<div style={{border: \"1px solid black\", padding: \"5px\", paddingRight: \"20px\", textAlign: \"center\", backgroundColor: \"#43464B\", color: \"white\"}}>\r\n\t\t\t\t\t<div style={{width: \"40%\", display: \"inline-block\", cursor: \"pointer\"}} onClick={() => this.setSortFunction(\"category\")}>Related Category</div>\r\n\t\t\t\t\t<div style={{width: \"15%\", display: \"inline-block\", cursor: \"pointer\"}} onClick={() => this.setSortFunction(\"overlap\")}>Overlap</div>\r\n\t\t\t\t\t<div style={{width: \"30%\", display: \"inline-block\", cursor: \"pointer\"}} onClick={() => this.setSortFunction(\"prdcnt\")}>Products</div>\r\n\t\t\t\t\t<div style={{width: \"15%\", display: \"inline-block\", cursor: \"pointer\"}} onClick={() => this.setSortFunction(\"distance\")}>Distance</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{flexGrow: 1, overflow: \"auto\", width: \"100%\"}}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talsoEntries.map(alsoNodeId => {\r\n\t\t\t\t\t\t\tconst alsoNode = nodes[alsoNodeId];\r\n\t\t\t\t\t\t\tconst pathString = alsoNode.path.slice(1, alsoNode.path.length - 1)\r\n\t\t\t\t\t\t\t\t.map(pathNode => pathNode.nodeName)\r\n\t\t\t\t\t\t\t\t.join(\" > \") + \" >\";\r\n\r\n\t\t\t\t\t\t\tlet backgroundColor = \"white\";\r\n\t\t\t\t\t\t\tlet color = \"black\";\r\n\r\n\t\t\t\t\t\t\tif (this.props.relNode !== undefined) {\r\n\t\t\t\t\t\t\t\tif (this.props.relNode.id == alsoNodeId) {\r\n\t\t\t\t\t\t\t\t\tbackgroundColor = \"black\";\r\n\t\t\t\t\t\t\t\t\tcolor = \"white\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div style={{border: \"1px solid black\", padding: \"5px\", cursor: \"pointer\", backgroundColor: backgroundColor, color: color}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.setRelatedNode(alsoNodeId)}\r\n\t\t\t\t\t\t\t\t\tkey={alsoNodeId}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div style={{width: \"40%\", display: \"inline-block\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{color: \"gray\", fontSize: \"12px\", display: \"inline-block\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{pathString}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{alsoNode.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div style={{width: \"15%\", display: \"inline-block\", textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t{this.props.selNode.also[alsoNodeId]}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div style={{width: \"30%\", display: \"inline-block\", textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{display: \"inline-block\", height: \"12px\", backgroundColor: \"green\", width: `${Math.round((alsoNode.prdCnt / (alsoNode.subPrdCnt)) * 100)}%`}}></div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{display: \"inline-block\", height: \"12px\", backgroundColor: \"red\", width: `${Math.round(((alsoNode.subPrdCnt - alsoNode.prdCnt) / (alsoNode.subPrdCnt)) * 100)}%`}}></div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{alsoNode.subPrdCnt} (<span style={{color: 'green'}}>{alsoNode.prdCnt}</span> / <span style={{color: 'red'}}>{alsoNode.subPrdCnt - alsoNode.prdCnt}</span>)\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div style={{width: \"15%\", display: \"inline-block\", textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t{getDistanceBetweenNodes(this.props.selNode.id, alsoNodeId)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RelatedDisplay;","import { Component } from 'react';\r\nimport ChordDiagram from 'react-chord-diagram';\r\n\r\nimport nodes from './data/data.json';\r\n\r\nconst matrix = [\r\n  [11975, 5871, 8916, 2868],\r\n  [1951, 10048, 2060, 6171],\r\n  [8010, 16145, 8090, 8045],\r\n  [1013, 990, 940, 6907]\r\n]; \r\n\r\nconst matrix2 = [\r\n\t[0, 7675, 1406, 234, 232],\r\n\t[7675, 0, 164, 1674, 285],\r\n\t[1406, 164, 0, 219, 0],\r\n\t[234, 1674, 219, 0, 0],\r\n\t[232, 285, 0, 0, 0]\r\n\r\n]\r\n\r\n\r\n\r\nconst getAlsoIntersection = (sel, rel) => {\r\n\tconst selAlsoIds = Object.keys(sel.also);\r\n\tconst relAlsoIds = Object.keys(rel.also);\r\n\tconst overlapping = selAlsoIds.filter(item => relAlsoIds.includes(item));\r\n\tconst withCounts = overlapping.map(item => {\r\n\t\treturn ({\r\n\t\t\t[item]: rel.also[item]\r\n\t\t});\r\n\t});\r\n\tconst sorted = withCounts.sort((a, b) => {\r\n\t\tif (Object.values(a)[0] < Object.values(b)[0]) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tif (Object.values(a)[0] > Object.values(b)[0]) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n\treturn sorted.slice(0,4).map(item => Object.keys(item)[0]);\r\n}\r\n\r\nconst getMatrixNodes = (sel, rel) => {\r\n\tconst alsoIntersection = getAlsoIntersection(sel, rel);\r\n\tconst matrixNodes = [rel].concat(alsoIntersection.map(a => nodes[a]));\r\n\treturn matrixNodes;\r\n}\r\n\r\nconst createMatrix = (sel, rel) => {\r\n\tconst matrixNodes = getMatrixNodes(sel, rel);\r\n\tconst matrix = [];\r\n\tmatrixNodes.forEach((item, outerInd) => matrix.push(\r\n\t\t\r\n\t\tmatrixNodes.map((node, innerInd) => {\r\n\t\t\tif (outerInd === innerInd) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (item.also[node.id] === undefined) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn item.also[node.id];\r\n\t\t})\r\n\t));\r\n\r\n\tconsole.log(matrix);\r\n\treturn matrix;\r\n}\r\n\r\nconst colors = [\"#FFBA49\", \"#20A39E\", \"#EF5B5B\", \"#23001E\", \"#8C2155\"];\r\nconst fontColors = [\"#000000\", \"#000000\", \"#000000\", \"#FFFFFF\", \"#FFFFFF\"];\r\n\r\nclass ChordDisplay extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmatrix: this.props.relNode !== undefined ? createMatrix(this.props.selNode, this.props.relNode) : undefined\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst myMatrixNodes = this.props.relNode !== undefined ? getMatrixNodes(this.props.selNode, this.props.relNode) : undefined;\r\n\t\tconsole.log(myMatrixNodes);\r\n\t\tconst myMatrix = this.props.relNode !== undefined ? createMatrix(this.props.selNode, this.props.relNode) : undefined;\r\n\t\tconst myColors = myMatrix !== undefined ? colors.slice(0, myMatrix.length) : undefined;\r\n\t\tconst myFontColors = myMatrix !== undefined ? fontColors.slice(0, myMatrix.length) : undefined;\r\n\t\tconst myLabels = myMatrix !== undefined ? myMatrix.map(row => row.reduce((acc, cur) => acc + cur, 0)) : undefined;\r\n\t\treturn (\r\n\t\t\t<div style={{display: \"flex\", flexFlow: \"column\", justifyContent: \"center\", alignItem: \"center\",}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tmyMatrix !== undefined && myMatrixNodes.length > 1 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{flex: 1}}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tmyMatrixNodes.map((node, ind) => {\r\n\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t<div key={node.id} \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"5px\", \r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: myColors[ind], \r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\", \r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\", \r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: myFontColors[ind], \r\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.setRelatedNode(node.id)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{ node.name }\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ChordDiagram\r\n\t\t\t\t\t\t\tmatrix={myMatrix}\r\n\t\t\t\t\t\t\tcomponentId={1}\r\n\t\t\t\t\t\t\theight={400}\r\n\t\t\t\t\t\t\tresizeWithWindow={true}\r\n\t\t\t\t\t\t\tgroupLabels={myLabels}\r\n\t\t\t\t\t\t\tgroupColors={myColors}\r\n\t\t\t\t\t\t\tgroupOnClick={(ind) => this.props.setRelatedNode(myMatrixNodes[ind].id)}\r\n\t\t\t\t\t\t\tstyle={{flex: 1, marginTop: 20}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tmyMatrix !== undefined && myMatrixNodes.length === 1 &&\r\n\t\t\t\t\t<div style={{margin: \"auto\", padding: \"10px\"}}>\r\n\t\t\t\t\t\tThis related category does not overlap with any other related category.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tmyMatrix === undefined &&\r\n\t\t\t\t\t<div style={{margin: \"auto\", padding: \"10px\"}}>\r\n\t\t\t\t\t\tPlease select a related category.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChordDisplay;","import { Component, useState } from 'react';\nimport TreeDisplay from './TreeDisplay';\nimport SelectorDisplay from './SelectorDisplay';\nimport RelatedDisplay from './RelatedDisplay';\nimport ChordDisplay from './ChordDisplay';\n\nimport nodes from './data/data.json';\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselNodeId: 0,\n\t\t\trelNodeId: undefined\n\t\t}\n\n\t\tthis.setSelectedNode = this.setSelectedNode.bind(this);\n\t\tthis.setRelatedNode = this.setRelatedNode.bind(this);\n\t}\n\n\tsetSelectedNode = (nodeId) => {\n\t\tthis.setState({\n\t\t\tselNodeId: nodeId,\n\t\t\trelNodeId: undefined\n\t\t});\n\t}\n\n\tsetRelatedNode = (nodeId) => {\n\t\tthis.setState({\n\t\t\trelNodeId: nodeId\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t<div style={{display: \"flex\", flexDirection: \"row\", border: \"1px solid gray\", userSelect: \"none\"}}>\n\t\t\t\t<div style={{height: \"400px\", flex: 2}}>\n\t\t\t\t\t<TreeDisplay\n\t\t\t\t\t\tselNodeId={this.state.selNodeId}\n\t\t\t\t\t\trelNodeId={this.state.relNodeId}\n\t\t\t\t\t\tsetSelectedNode={this.setSelectedNode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{height: \"400px\", flex: 1}}>\n\t\t\t\t\t<SelectorDisplay\n\t\t\t\t\t\tselNode={nodes[this.state.selNodeId]}\n\t\t\t\t\t\tsetSelectedNode={this.setSelectedNode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{display: \"flex\", flexDirection: \"row\", border: \"1px solid gray\", userSelect: \"none\"}}>\n\t\t\t\t<div style={{height: \"400px\", flex: 2}}>\n\t\t\t\t\t<RelatedDisplay\n\t\t\t\t\t\tselNode={nodes[this.state.selNodeId]}\n\t\t\t\t\t\trelNode={nodes[this.state.relNodeId]}\n\t\t\t\t\t\tsetRelatedNode={this.setRelatedNode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{height: \"400px\", flex: 1}}>\n\t\t\t\t\t<ChordDisplay\n\t\t\t\t\t\tselNode={nodes[this.state.selNodeId]}\n\t\t\t\t\t\trelNode={nodes[this.state.relNodeId]}\n\t\t\t\t\t\tsetRelatedNode={this.setRelatedNode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}